{"componentChunkName":"component---src-templates-post-template-js","path":"/articles/facebook-connect-javascript-cookie-and-ruby-on-rails","result":{"data":{"markdownRemark":{"id":"303e73a2-3f4d-5c81-b93e-8e9f38968e33","html":"<p>Update: I’m currently working this into a gem. Feel free to watch/use/contribute on github: <a href=\"https://github.com/aaronvb/fb_js_connect\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github.com/aaronvb/fb_js_connect</a></p>\n<p>I wrote this class to verify(using Facebook’s cookie verification article) and parse the Facebook Javascript Connect cookie.</p>\n<p>This can definitely work without Ruby on Rails, but you may need to change a few things.</p>\n<p>Reference: Facebook Connect Javascript SDK <a href=\"http://developers.facebook.com/docs/reference/javascript/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">developers.facebook.com/docs/reference/javascript/</a></p>\n<p>To use this in Ruby on Rails, save this file into your RAILS_ROOT/lib folder. If you alter or use this code please contribute back!</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">require</span> <span class=\"token string\">'digest/md5'</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FbJsConnect</span>\n  <span class=\"token comment\"># When using the Facebook Javascript SDK to connect users to your site,</span>\n  <span class=\"token comment\"># a cookie will be placed in your applications session store. This class</span>\n  <span class=\"token comment\"># will verify your cookie, tell you if you're connected, and provide</span>\n  <span class=\"token comment\"># you with a User and other information</span>\n\n  <span class=\"token comment\">#</span>\n  <span class=\"token comment\"># cookie = cookies[\"fbs_YOUR FACEBOOK APP ID\"]</span>\n  <span class=\"token comment\"># fb = FbJsConnect.new(cookie)</span>\n  <span class=\"token comment\"># fb.connected => true or false</span>\n  <span class=\"token comment\"># fb.verified? => true or false</span>\n  <span class=\"token comment\"># fb.user => User or nil (Assuming you have a User class with the</span>\n  <span class=\"token comment\"># attribute fb_uid)</span>\n  <span class=\"token comment\"># fb.uid if fb.connected => uid if connected</span>\n  <span class=\"token comment\"># fb.access_token if fb.connected => access_token if connected</span>\n\n  <span class=\"token comment\"># Verification works by combining cookie key + values, minus sig,</span>\n  <span class=\"token comment\"># appending app_secret, then MD5 hashing it.</span>\n  <span class=\"token comment\"># The value of the MD5 should equal the sig value.</span>\n\n  attr_accessor <span class=\"token symbol\">:connected</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">@app_id</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token comment\"># YOUR FACEBOOK APP ID</span>\n    <span class=\"token variable\">@app_secret</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token comment\"># YOUR FACEBOOK APP SECRET KEY</span>\n    fb_cookie <span class=\"token operator\">=</span> cookie\n    <span class=\"token keyword\">if</span> fb_cookie\n      <span class=\"token comment\"># remove any quotes in cookie. Facebook puts it's cookie in</span>\n      <span class=\"token comment\"># quotes for some reason</span>\n      fb_cookie<span class=\"token punctuation\">.</span>gsub<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\"'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\"># split cookie values into array by '&amp;' symbol</span>\n      fb_cookie <span class=\"token operator\">=</span> fb_cookie<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">)</span>\n      fb_cookie_hash <span class=\"token operator\">=</span> <span class=\"token builtin\">Hash</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\n      fb_cookie<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>c<span class=\"token punctuation\">,</span> i<span class=\"token operator\">|</span>\n  \t key_value_arr <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># split value into kv hash</span>\n  \t fb_cookie_hash<span class=\"token punctuation\">[</span>key_value_arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key_value_arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># add to new hash</span>\n      <span class=\"token keyword\">end</span>\n\n      <span class=\"token variable\">@fb_cookie_hash</span> <span class=\"token operator\">=</span> fb_cookie_hash <span class=\"token comment\"># for verification</span>\n\n      <span class=\"token comment\"># apply connected and fb_cookie_hash to class attributes IF verified</span>\n      <span class=\"token keyword\">if</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>verified<span class=\"token operator\">?</span>\n        <span class=\"token variable\">@attributes</span> <span class=\"token operator\">=</span> fb_cookie_hash\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>connected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token comment\"># no cookie found so return false</span>\n      <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>connected <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">verified</span></span><span class=\"token operator\">?</span>\n    <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nFB: digested sig: <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>process<span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"FB: sig: <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@sig</span><span class=\"token delimiter tag\">}</span></span>\\n\\n\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> process <span class=\"token operator\">==</span> <span class=\"token variable\">@sig</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">user</span></span>\n    <span class=\"token comment\"># find user with UID</span>\n    <span class=\"token comment\">#</span>\n    user <span class=\"token operator\">=</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token symbol\">:first</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:conditions</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token symbol\">:fb_uid</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n      <span class=\"token variable\">@fb_cookie_hash</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"uid\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> user\n      <span class=\"token keyword\">return</span> user <span class=\"token comment\"># a user was found with UID</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">nil</span> <span class=\"token comment\"># a user was not found</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">method_missing</span></span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span>\n    attribute <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span>to_s\n    <span class=\"token keyword\">if</span> attribute <span class=\"token operator\">=</span><span class=\"token operator\">~</span> <span class=\"token regex\">/=$/</span>\n      <span class=\"token variable\">@attributes</span><span class=\"token punctuation\">[</span>attribute<span class=\"token punctuation\">.</span>chop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token variable\">@attributes</span><span class=\"token punctuation\">[</span>attribute<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">private</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">process</span></span>\n    <span class=\"token variable\">@sig</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@fb_cookie_hash</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sig'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># get sig to compare final hash</span>\n    payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token variable\">@fb_cookie_hash</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>k<span class=\"token punctuation\">,</span> v<span class=\"token operator\">|</span>\n      payload<span class=\"token punctuation\">.</span>push <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>k<span class=\"token delimiter tag\">}</span></span>=<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>v<span class=\"token delimiter tag\">}</span></span>\"</span> <span class=\"token keyword\">unless</span> k <span class=\"token operator\">==</span> <span class=\"token string\">\"sig\"</span>\n    <span class=\"token keyword\">end</span>\n    digest <span class=\"token operator\">=</span> <span class=\"token constant\">Digest</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">MD5</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">.</span>to_s <span class=\"token operator\">+</span> <span class=\"token variable\">@app_secret</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> digest\n  <span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">end</span></code></pre></div>","fields":{"slug":"/articles/facebook-connect-javascript-cookie-and-ruby-on-rails","tagSlugs":["/tag/code/","/tag/java-script/","/tag/ruby-on-rails/"]},"frontmatter":{"date":"2010-10-25","description":"I wrote this class to verify(using Facebook's cookie verification article) and parse the Facebook Javascript Connect cookie.","tags":["Code","JavaScript","Ruby on Rails"],"title":"Facebook Connect Javascript Cookie and Ruby on Rails","legacyArticleId":null}}},"pageContext":{"slug":"/articles/facebook-connect-javascript-cookie-and-ruby-on-rails"}},"staticQueryHashes":["2255556206","251939775","401334301"]}