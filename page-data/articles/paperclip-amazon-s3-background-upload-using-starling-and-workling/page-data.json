{"componentChunkName":"component---src-templates-post-template-js","path":"/articles/paperclip-amazon-s3-background-upload-using-starling-and-workling","result":{"data":{"markdownRemark":{"id":"db06e528-b04a-5541-b8f5-7d9bc0e9b2ab","html":"<p>I spent several days searching for ANY information on background uploads to Amazon S3 with <a href=\"https://github.com/thoughtbot/paperclip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Paperclip</a> and I just couldn’t find anything concrete. There were a few posts on the Paperclip Google Code board that talked about it but with no clear examples of how to do it.</p>\n<p>Anyway, we know it’s very easy to add S3 support into Paperclip, and there’s tons of information on setting that up. It works flawless and it’s simple, yet your upload now takes twice as long in comparison to using your servers filesystem for storage. The problem is pretty obvious and I’ll explain why in this example in case you’re wondering.</p>\n<p>Example A(filesystem)</p>\n<ol>\n<li>User uploads a file</li>\n<li>Application re sizes file into thumbnails</li>\n</ol>\n<p>Example B(Amazon S3)</p>\n<ol>\n<li>User uploads a file</li>\n<li>Application re sizes file into thumbnails</li>\n<li>Application then connects to Amazon S3 and uploads thumbnail</li>\n<li>Repeat 3 until each thumbnail is uploaded</li>\n</ol>\n<p>As you can see in Example B, the more thumbnails you need the longer your upload is going to take because Paperclip needs to send each file to Amazon S3 one at time. All the while a user is still waiting for the website to respond back. If you use New Relic RPM you’ll notice that your Apdex gets destroyed by this. Which is basically telling you that a user is waiting longer than a second(more like 3-5 seconds) for an upload process.</p>\n<p>Although there’s nothing that can be done about the initial upload, why does the user need to wait around while the application uploads to Amazon S3(which could take 2-5 seconds longer)?</p>\n<p>I worked on several ways to get Paperclip to process it’s Amazon S3 storage in the background that led me to more complications than a solution. I realized I wanted to try my best to not modify the original Paperclip code so there wouldn’t be any problems updating Paperclip in the future.</p>\n<p>The next idea was to have some sort of ‘syncing’ to Amazon S3 system. Let Paperclip upload to the filesystem, then have a background process move the files to Amazon S3, then delete the files off the filesystem.</p>\n<p>Let’s assume you already have your rails app, starling/workling installed and running, and paperclip installed and working on the model of your choice. Let’s also assume we’re applying this to a User model and the attachment is an avatar. You’ll also need the aws-s3 gem(<a href=\"http://amazon.rubyforge.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://amazon.rubyforge.org</a>) and add that to your environment.rb.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo gem install aws-s3</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#environment.rb</span>\nconfig<span class=\"token punctuation\">.</span>gem <span class=\"token string\">'aws-s3'</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:lib</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'aws/s3'</span></code></pre></div>\n<p>First let’s modify the Paperclip settings in our User model.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">has_attached_file   <span class=\"token symbol\">:avatar</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:styles</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span> <span class=\"token symbol\">:large</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"800x800&amp;>\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:medium</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"300x300&amp;>\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:thumb</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"100x100#\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:tiny</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"50x50#\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:really_tiny</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"25x25#\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:storage</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token symbol\">:filesystem</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:url</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"http://s3.amazonaws.com/webapps3bucketname/:attachment/:id/:style/:basename.:extension\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:path</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"tmp/paperclip_uploads/:attachment/:id/:style/:basename.:extension\"</span></code></pre></div>\n<p>The :url is set to the Amazon’s S3 link so that when we generate urls with object.avatar.url(:medium) it will output the Amazon S3 url instead of the filesystem path. I also set the :path to the location I want the file to be uploaded to and re sized. I chose the tmp folder since it seemed appropriate. (Note: I’m considering moving the location to system because it’s a shared folder across capistrano.)</p>\n<p>A new column is needed for this model to let us know when the background uploading is being processed.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">script/generate migration add_processing_upload_to_user processing_upload:boolean\nrake db:migrate</code></pre></div>\n<p>It’s your choice if you want to set the default to true, assuming upon creation of a User record that an upload will be included. In my case, a user gets created first and if the user decides to upload an avatar, it’s done through the user settings later, so  I set the default to false.</p>\n<p>Next we’ll setup the worker which will handle the upload to Amazon S3.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#app/workers/paperclip_background_upload_worker.rb</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaperclipBackgroundUploadWorker</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">Workling</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">upload_to_amazon_s3</span></span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin uploading <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:type</span><span class=\"token punctuation\">]</span><span class=\"token delimiter tag\">}</span></span> to Amazon S3...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#find the user and the avatar</span>\n    <span class=\"token variable\">@user</span> <span class=\"token operator\">=</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>find_by_id<span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">@avatar</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>avatar\n\n    <span class=\"token comment\">#connect to amazon s3</span>\n    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Connecting to Amazon S3...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token constant\">AWS</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">S3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span><span class=\"token punctuation\">.</span>establish_connection<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>\n                                        <span class=\"token symbol\">:access_key_id</span>     <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'ACCESSKEYID'</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token symbol\">:secret_access_key</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'SECRETACCESSKEY'</span>\n                                        <span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#first we store the original</span>\n    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Uploading original image...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token constant\">AWS</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">S3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">S3Object</span><span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span><span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>path_s3<span class=\"token punctuation\">(</span><span class=\"token symbol\">:original</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">RAILS_ROOT</span><span class=\"token delimiter tag\">}</span></span>/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">(</span><span class=\"token symbol\">:original</span><span class=\"token punctuation\">)</span><span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YOUR_AMAZONS3_BUCKET_NAME'</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:access</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token symbol\">:public_read</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#then thumbnails</span>\n    <span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>styles<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>key<span class=\"token punctuation\">,</span> value<span class=\"token operator\">|</span>\n      logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Uploading <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>key<span class=\"token delimiter tag\">}</span></span> image...\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token constant\">AWS</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">S3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">S3Object</span><span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span><span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>path_s3<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">RAILS_ROOT</span><span class=\"token delimiter tag\">}</span></span>/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YOUR_AMAZONS3_BUCKET_NAME'</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:access</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token symbol\">:public_read</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token comment\">#start clean up, files first then directories</span>\n    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Removing original from local filesystem...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#remove original file</span>\n    <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">RAILS_ROOT</span><span class=\"token delimiter tag\">}</span></span>/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">(</span><span class=\"token symbol\">:original</span><span class=\"token punctuation\">)</span><span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#remove thumbnail files</span>\n    <span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>styles<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>key<span class=\"token punctuation\">,</span> value<span class=\"token operator\">|</span>\n      logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Removing <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>key<span class=\"token delimiter tag\">}</span></span> from local filesystem...\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">RAILS_ROOT</span><span class=\"token delimiter tag\">}</span></span>/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token comment\">#delete directories</span>\n    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Removing directories...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#remove original folder</span>\n    <span class=\"token builtin\">Dir</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">RAILS_ROOT</span><span class=\"token delimiter tag\">}</span></span>/tmp/paperclip_uploads/avatars/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>id<span class=\"token delimiter tag\">}</span></span>/original\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#remove thumbnail folders</span>\n    <span class=\"token variable\">@avatar</span><span class=\"token punctuation\">.</span>styles<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>key<span class=\"token punctuation\">,</span> value<span class=\"token operator\">|</span>\n      <span class=\"token builtin\">Dir</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">RAILS_ROOT</span><span class=\"token delimiter tag\">}</span></span>/tmp/paperclip_uploads/avatars/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>id<span class=\"token delimiter tag\">}</span></span>/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>key<span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token comment\">#remove avatar user_id folder</span>\n    <span class=\"token builtin\">Dir</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">RAILS_ROOT</span><span class=\"token delimiter tag\">}</span></span>/tmp/paperclip_uploads/avatars/<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>id<span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#set processing to false now that we are finished</span>\n    <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>processing_upload <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>save\n\n    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Finished uploading to Amazon S3.\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>This is pretty simple. The worker uses the aws-s3 gem to upload the files and once it finishes they get removed from the filesystem. You’ll need to include your Amazon S3 Access Key ID and Secret Access Key and also fill in your Amazon S3 Bucket name that the files are getting uploaded to where it says ‘YOUR<em>AMAZONS3</em>BUCKET<em>NAME”. You may also notice a new method named ’path</em>s3’ which I had to add to Paperclips attachment file.</p>\n<p>Open up the ‘attachment.rb’ file in the ‘vendor/plugins/paperclip/lib/paperclip/’ folder.  Under ‘def initialize’ add the two ‘@path_s3 =’ lines code(around line 47):</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">      <span class=\"token variable\">@dirty</span>             <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token comment\">#a new hash value and key for the s3 path we define in the model</span>\n      <span class=\"token variable\">@path_s3</span>           <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:path_s3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token variable\">@path_s3</span>           <span class=\"token operator\">=</span> <span class=\"token variable\">@path_s3</span><span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token variable\">@path_s3</span><span class=\"token punctuation\">.</span>is_a<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Proc</span><span class=\"token punctuation\">)</span>\n\n      normalize_style_definition\n      initialize_storage</code></pre></div>\n<p>Then scroll down, in the the same file, to about line 113 where there’s a method named ‘path’(def path style = nil #:nodoc:). Under that method we are going to make a new one.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">path</span></span> style <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span> <span class=\"token comment\">#:nodoc:</span>\n      original_filename<span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">nil</span> <span class=\"token punctuation\">:</span> interpolate<span class=\"token punctuation\">(</span><span class=\"token variable\">@path</span><span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n\n    <span class=\"token comment\">#Added this for background uploading.&lt;br />    #This returns the path to the attachment in the s3 bucket.</span>\n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">path_s3</span></span> style <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\n      original_filename<span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">nil</span> <span class=\"token punctuation\">:</span> interpolate<span class=\"token punctuation\">(</span><span class=\"token variable\">@path_s3</span><span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span></code></pre></div>\n<p>This will let us define a new key value(:path<em>s3) in the has</em>attached<em>file hash in the User model. If you’re wondering what the ‘path</em>s3’ does, it determines the path within the Amazon S3 Bucket that the file gets saved to and by having it in our has<em>attached</em>file options, we can change this if we need to later on. Which I’ll show you next.</p>\n<p>Back to the User model, we add a new line in the has<em>attached</em>file hash:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">has_attached_file   <span class=\"token symbol\">:avatar</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:styles</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span> <span class=\"token symbol\">:large</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"800x800&amp;>\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:medium</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"300x300&amp;>\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:thumb</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"100x100#\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:tiny</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"50x50#\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:really_tiny</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"25x25#\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:storage</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token symbol\">:filesystem</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:url</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"http://s3.amazonaws.com/webapps3bucketname/:attachment/:id/:style/:basename.:extension\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:path</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"tmp/paperclip_uploads/:attachment/:id/:style/:basename.:extension\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token symbol\">:path_s3</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\":attachment/:id/:style/:basename.:extension\"</span></code></pre></div>\n<p>Don’t forget to restart the server since the Paperclip plugin was modified and also restart workling to generate the new workling we created earlier.</p>\n<p>The last part is to call the worker through Starling. In this example, the file upload is being handled normally through the User controller and the Update action.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">update</span></span>\n  <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>attributes <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:user</span><span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">#only set the processing_upload to true if an avatar file was uploaded</span>\n  <span class=\"token comment\">#if the file doesn't pass valiations, @user wont get saved and processing_upload stays false</span>\n  <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>processing_upload <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token keyword\">if</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:user</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token symbol\">:avatar</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">if</span> <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>save\n    flash<span class=\"token punctuation\">[</span><span class=\"token symbol\">:notice</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Your profile was successfully updated!\"</span>\n    <span class=\"token comment\">#tell starling to start the background worker only if processing_upload is true</span>\n    <span class=\"token comment\">#the id of the user gets passed to let our worker know which files to upload</span>\n    <span class=\"token constant\">PaperclipBackgroundUploadWorker</span><span class=\"token punctuation\">.</span>async_upload_to_amazon_s3<span class=\"token punctuation\">(</span><span class=\"token symbol\">:id</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>processing_upload\n    <span class=\"token comment\">#redirect to the edit page</span>\n    redirect_to edit_user_path\n  <span class=\"token keyword\">else</span>\n    <span class=\"token comment\">#save failed</span>\n    redirect_to <span class=\"token symbol\">:action</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'edit'</span>\n    flash<span class=\"token punctuation\">[</span><span class=\"token symbol\">:notice</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Something went wrong while trying to update your profile.\"</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>That’s it! The next step is to create a way to let your users know that the file is being processed. All you have to do is check if processing_upload = true.</p>\n<p>This is my first tutorial type of post so bear with me if I missed anything and please let me know asap! Also if you have any experience doing something similar to this, let me know!</p>","fields":{"slug":"/articles/paperclip-amazon-s3-background-upload-using-starling-and-workling","tagSlugs":["/tag/code/","/tag/ruby-on-rails/"]},"frontmatter":{"date":"2009-07-19","description":"We know it’s very easy to add S3 support into Paperclip, and there’s tons of information on setting that up. It works flawless and it’s simple, yet your upload now takes twice as long in comparison to using your servers filesystem for storage. The problem is pretty obvious and I’ll explain why in this article.","tags":["Code","Ruby on Rails"],"title":"Paperclip Amazon S3 Background Upload Using Starling and Workling"}}},"pageContext":{"slug":"/articles/paperclip-amazon-s3-background-upload-using-starling-and-workling"}},"staticQueryHashes":["1251057998","251939775","401334301"]}