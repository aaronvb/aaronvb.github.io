{"componentChunkName":"component---src-templates-post-template-js","path":"/articles/validations-for-multiple-nested-model-forms","result":{"data":{"markdownRemark":{"id":"2b787c65-cfef-5f4e-bed3-4abf3e6196af","html":"<p>Here’s a little trick I found when handling multiple nested models in a form that require validations for each model.</p>\n<p>Spec time. For example, we have a model, Author, which has<em>many Books and has</em>many Magazines. Book and Magazine has validations. On a single page, we create a three forms for Book, Magazine, and Author. There is also an option select that a user can choose if the Author has a Book or a Magazine.</p>\n<p>Pretty straight forward. Let’s do some code.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#models/author.rb</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Author</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  has_many <span class=\"token symbol\">:books</span>\n  has_many <span class=\"token symbol\">:magazines</span>\n\n  accepts_nested_attributes_for <span class=\"token symbol\">:books</span>\n  accepts_nested_attributes_for <span class=\"token symbol\">:magazines</span>\n\n  validates_presence_of <span class=\"token symbol\">:name</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#models/book.rb</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  belongs_to <span class=\"token symbol\">:author</span>\n  validates_presence_of <span class=\"token symbol\">:title</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token symbol\">:genre</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#models/magazine.rb</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Magazine</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  belongs_to <span class=\"token symbol\">:author</span>\n  validates_presence_of <span class=\"token symbol\">:title</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token symbol\">:genre</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>Basic model setup with validations and accepts<em>nested</em>attributes_for. More info on that can be found in the <a href=\"https://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ruby on Rails API - Nested Attributes</a>.</p>\n<p>Moving on to the form setup..</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#views/authors/new.html.erb</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> form_for <span class=\"token variable\">@author</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>f<span class=\"token operator\">|</span> <span class=\"token string\">%>\n&lt;%= f.error_messages %></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token string\">%= f.label :name %>&lt;br />\n    &lt;%=</span> f<span class=\"token punctuation\">.</span>text_field <span class=\"token symbol\">:name</span> <span class=\"token string\">%>\n  &lt;/p></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token string\">%= f.radio_button(\"media_type\", \"book\" %>&lt;%=</span> f<span class=\"token punctuation\">.</span>label <span class=\"token symbol\">:media_type_book</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Book'</span> <span class=\"token string\">%> [?]\n    &lt;%= f.radio_button(\"media_type\", \"magazine\" %></span><span class=\"token operator\">&lt;</span><span class=\"token string\">%= f.label :media_type_magazine, 'Magazine' %> [?]\n  &lt;/p>\n  &lt;% f.fields_for :books do |book| %>\n    &lt;p>\n      &lt;%=</span> book<span class=\"token punctuation\">.</span>label <span class=\"token symbol\">:title</span> <span class=\"token string\">%>&lt;br /></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token string\">%= book.text_field :title %>\n    &lt;/p>\n    &lt;p>\n      &lt;%=</span> book<span class=\"token punctuation\">.</span>label <span class=\"token symbol\">:genre</span> <span class=\"token string\">%>&lt;br /></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token string\">%= book.text_field :genre %>\n    &lt;/p>\n  &lt;% end %>\n\n  &lt;% f.fields_for :magazines do |magazine| %>\n    &lt;p>\n      &lt;%=</span> magazine<span class=\"token punctuation\">.</span>label <span class=\"token symbol\">:title</span> <span class=\"token string\">%>&lt;br /></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token string\">%= magazine.text_field :title %>\n    &lt;/p>\n    &lt;p>\n      &lt;%=</span> magazine<span class=\"token punctuation\">.</span>label <span class=\"token symbol\">:genre</span> <span class=\"token string\">%>&lt;br /></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token string\">%= magazine.text_field :genre %>\n    &lt;/p>\n  &lt;% end %>\n  &lt;%=</span> f<span class=\"token punctuation\">.</span>submit <span class=\"token string\">'Submit'</span> <span class=\"token string\">%>\n&lt;% end %></span></code></pre></div>\n<p>That sets up the form with the nested model, now for the controller code.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#controllers/authors_controller.rb</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AuthorsController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationController</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">new</span></span>\n    <span class=\"token variable\">@author</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Author</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\n    books <span class=\"token operator\">=</span> <span class=\"token variable\">@author</span><span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span>build <span class=\"token comment\">#this builds the nested form in the view</span>\n    magazines <span class=\"token operator\">=</span> <span class=\"token variable\">@author</span><span class=\"token punctuation\">.</span>magazines<span class=\"token punctuation\">.</span>build <span class=\"token comment\">#this builds the nested form in the view</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">create</span></span>\n    param_hash <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:author</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:author</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token symbol\">:media_type</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"book\"</span>\n      param_hash<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"books_attributes\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elsif</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:author</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token symbol\">:media_type</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"magazine\"</span>\n      param_hash<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"magazines_attributes\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token variable\">@author</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Author</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>param_hash<span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">@author</span><span class=\"token punctuation\">.</span>save\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>Instead of passing the params straight to Author.new, it’s put into a hash variable. Then the params get checked for a title and genre, if empty delete the key from the hash and pass to Author.new. Activerecord wont see the book param and will skip the validations for it.</p>","fields":{"slug":"/articles/validations-for-multiple-nested-model-forms","tagSlugs":["/tag/code/","/tag/ruby-on-rails/"]},"frontmatter":{"date":"2010-03-06","description":"Here's a little trick I found when handling multiple nested models in a form that require validations for each model.","tags":["Code","Ruby on Rails"],"title":"Validations For Multiple Nested Model Forms"}}},"pageContext":{"slug":"/articles/validations-for-multiple-nested-model-forms"}},"staticQueryHashes":["1251057998","251939775","401334301"]}