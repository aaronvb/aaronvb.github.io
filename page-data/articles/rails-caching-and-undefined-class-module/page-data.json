{"componentChunkName":"component---src-templates-post-template-js","path":"/articles/rails-caching-and-undefined-class-module","result":{"data":{"markdownRemark":{"id":"2ee82798-65af-56fa-82f0-a66231ac2544","html":"<p>Note: This doesn’t affect anything in production as classes are cached at load, see config/environments/production.rb: config.cache_classes = true</p>\n<p>I’ve run into this annoying little problem every time I start work on implementing caching into my rails projects using the built in Rails.cache in Activerecord. If you are using Rails.cache, and you are using it to store objects using Marshal.dump and Marshal.load, which is default, I’m sure you’ve experienced this error. I’m also pretty sure you’ve googled it and were a little confused as to why it keeps happening.</p>\n<p>You write an object to the Rails.cache, Rails.cache.write(“post<em>#{@post.id}”, @post), and then read the object, Rails.cache.read(“post</em>#{@post.id}”), you get the object. Now this time you write the object to cache, restart your rails app, and try to read the object, but now you’ve received an error, ArgumentError: undefined class/module YOUR_MODEL. This is because rails is trying to Marshal the object, or model in this case, but rails hasn’t loaded the model yet!</p>\n<p>Go ahead, test it:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">$ rails c\n<span class=\"token operator\">></span> <span class=\"token variable\">@kitten</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Kitten</span><span class=\"token punctuation\">.</span>first\n<span class=\"token operator\">></span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"kitten_<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token variable\">@kitten</span><span class=\"token punctuation\">.</span>id<span class=\"token delimiter tag\">}</span></span>\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@kitten</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"OK\"</span>\n<span class=\"token operator\">></span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"kitten_1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token comment\">#&lt;Kitten id: 1, cute: \"no\"></span>\n<span class=\"token operator\">></span> exit\n\n$ rails c\n<span class=\"token operator\">></span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"kitten_1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token constant\">ArgumentError</span><span class=\"token punctuation\">:</span> undefined <span class=\"token keyword\">class</span><span class=\"token operator\">/</span><span class=\"token keyword\">module</span> <span class=\"token constant\">Kitten</span>\n<span class=\"token operator\">></span> <span class=\"token constant\">Kitten</span>\n<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token constant\">Kitten</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> integer<span class=\"token punctuation\">,</span> cute<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"kitten_1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token comment\">#&lt;Kitten id: 1, cute: \"no\"></span></code></pre></div>\n<p>So the solution is to just load all the damn models at load. I thought about using the production value, config.cache_classes = true, in the  development environment, but then I would have to restart my server every time I modified any code. Then I thought why can’t I just require it in an initialize file that only runs if it’s in development mode.</p>\n<p>Create a file in your config/initializers folder and put this in:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">if</span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>env <span class=\"token operator\">==</span> <span class=\"token string\">\"development\"</span>\n  <span class=\"token builtin\">Dir</span><span class=\"token punctuation\">.</span>foreach<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>root<span class=\"token delimiter tag\">}</span></span>/app/models\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>model_name<span class=\"token operator\">|</span>\n    require_dependency model_name <span class=\"token keyword\">unless</span> model_name <span class=\"token operator\">==</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">||</span> model_name <span class=\"token operator\">==</span> <span class=\"token string\">\"..\"</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>","fields":{"slug":"/articles/rails-caching-and-undefined-class-module","tagSlugs":["/tag/code/","/tag/ruby-on-rails/"]},"frontmatter":{"date":"2011-07-17","description":"If you are using Rails.cache, and you are using it to store objects using Marshal.dump and Marshal.load, which is default, I'm sure you've experienced this error.","tags":["Code","Ruby on Rails"],"title":"Rails caching and undefined class/module"}}},"pageContext":{"slug":"/articles/rails-caching-and-undefined-class-module"}},"staticQueryHashes":["1251057998","251939775","401334301"]}