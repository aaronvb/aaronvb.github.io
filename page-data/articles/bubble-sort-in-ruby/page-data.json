{"componentChunkName":"component---src-templates-post-template-js","path":"/articles/bubble-sort-in-ruby","result":{"data":{"markdownRemark":{"id":"2a3cc2a1-02df-5adc-a788-1f1cda92098f","html":"<p>Lately during my free time I’ve been reading through sorting algorithms for fun and decided to implement several in Ruby. I’ll be posting each one in a separate article as I go through them.</p>\n<p>Here’s a <a href=\"https://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bubble sort</a> in Ruby.</p>\n<p>Bubble sort is a pretty fun and easy sorting algorithm. For each pass through an array of values, each value is compared to its adjacent value and swapped into the correct order and so on. Worst case is O(n^2) and best case is O(n) if the array is already sorted.</p>\n<p>Let’s start with the test.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">require</span> <span class=\"token string\">'test/unit'</span>\n<span class=\"token keyword\">require</span> <span class=\"token string\">\"./bubble_sort.rb\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SortingTests</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">Test</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Unit</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">TestCase</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">test_bubble_sort</span></span>\n    <span class=\"token variable\">@unsorted</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.</span><span class=\"token number\">.1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_a<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">{</span> rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.</span><span class=\"token number\">.1000</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 1000 random integers in an array</span>\n    <span class=\"token variable\">@sorted</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@unsorted</span><span class=\"token punctuation\">.</span>sort\n    bubble_sort <span class=\"token operator\">=</span> <span class=\"token constant\">BubbleSort</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\n    result <span class=\"token operator\">=</span> bubble_sort<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token variable\">@unsorted</span><span class=\"token punctuation\">)</span>\n    assert_equal <span class=\"token variable\">@sorted</span><span class=\"token punctuation\">,</span> result\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>In the test I create an array of random numbers and assert_equal to the result of the bubble sort.</p>\n<p>Next the code for the bubble sort.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BubbleSort</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">sort</span></span><span class=\"token punctuation\">(</span>to_sort<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># move the array to sort into a variable, which will be used for recursion</span>\n    arr_to_sort <span class=\"token operator\">=</span> to_sort\n    <span class=\"token comment\"># assume that we haven't swapped any values yet</span>\n    swapped <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token comment\"># lower the length by one because we can't compare the last value since it's at the end</span>\n    length_of_sort <span class=\"token operator\">=</span> arr_to_sort<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\"># begin loop through each value</span>\n    length_of_sort<span class=\"token punctuation\">.</span>times<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>i<span class=\"token operator\">|</span>\n      <span class=\"token comment\"># if the value we're on is greater than the value to the left of it, swap</span>\n      <span class=\"token keyword\">if</span> arr_to_sort<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr_to_sort<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># store values to be swapped</span>\n        a<span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> arr_to_sort<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>arr_to_sort<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># remove value we're on</span>\n        arr_to_sort<span class=\"token punctuation\">.</span>delete_at<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># insert the value to the right, moving the lesser value to the left</span>\n        arr_to_sort<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># swap is true since we did a swap during this pass</span>\n        swapped <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">if</span> swapped <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span>\n      <span class=\"token comment\"># no swaps, return sorted array</span>\n      <span class=\"token keyword\">return</span> arr_to_sort\n    <span class=\"token keyword\">else</span>\n      <span class=\"token comment\"># swaps were true, pass array to sort method</span>\n      bubble_sort <span class=\"token operator\">=</span> <span class=\"token constant\">BubbleSort</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\n      bubble_sort<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>arr_to_sort<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>I use recursion for each pass until swapped is equal to false, which means that the array is sorted.</p>","fields":{"slug":"/articles/bubble-sort-in-ruby","tagSlugs":["/tag/code/","/tag/ruby/","/tag/algorithms/"]},"frontmatter":{"date":"2013-04-20","description":"Implementing Bubble Sort in Ruby","tags":["Code","Ruby","Algorithms"],"title":"Bubble Sort in Ruby","legacyArticleId":null}}},"pageContext":{"slug":"/articles/bubble-sort-in-ruby"}},"staticQueryHashes":["2255556206","251939775","401334301"]}